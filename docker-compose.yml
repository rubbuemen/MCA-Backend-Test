version: '3'

services:
  simulado:
    image : ldabiralai/simulado:latest
    ports:
      - "3000:80"
    volumes:
      - ./mock:/app
    command: ./bin/simulado -f /app/mock_data.json

  zookeeper-server:
    image: docker.io/bitnami/zookeeper:3.7.0
    container_name: zookeeper-server
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    restart: unless-stopped
    networks:
      - default
    hostname: zookeeper-server

  kafka-server:
    image: docker.io/bitnami/kafka:2.8.0
    container_name: kafka-server
    expose:
      - "19093/tcp"
      - "9092/tcp"
    ports:
      - "19093:19093"
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper-server:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:19093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://host.docker.internal:9092,EXTERNAL://localhost:19093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    restart: unless-stopped
    networks:
      - default
    hostname: kafka-server
    depends_on:
      - zookeeper-server

  kafdrop-server:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop-server
    expose:
      - "9011/tcp"
    ports:
      - 9011:9000
    environment:
      - KAFKA_BROKERCONNECT=kafka-server:9092
    restart: unless-stopped
    networks:
      - default
    depends_on:
      - kafka-server
    labels:
      - "traefik.port=80"
      - "traefik.enable=true"
      - "traefik.http.services.kafdrop.loadbalancer.server.port=9000"
      - "traefik.http.routers.kafdrop.rule=Host(`kafdrop.localhost`)"
      - "traefik.http.routers.kafdrop.entrypoints=web"
  
